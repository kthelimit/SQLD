-- 현장 노하우

-- 1. 이탈리아의 연도, 사원별, 매출액 계산
SELECT SUBSTR(a.sales_month, 1, 4) as years,
        a.employee_id, 
        SUM(a.amount_sold) AS amount_sold
   FROM sales a,
        customers b,
        countries c
  WHERE a.cust_id = b.CUST_ID
    AND b.country_id = c.COUNTRY_ID
    AND c.country_name = 'Italy'     
  GROUP BY SUBSTR(a.sales_month, 1, 4), a.employee_id;
  
--2. 연도별 최대 매출액 추출
SELECT  years,  MAX(amount_sold) AS max_sold
  FROM (  SELECT SUBSTR(a.sales_month, 1, 4) as years,
                        a.employee_id, 
                        SUM(a.amount_sold) AS amount_sold
                   FROM sales a,
                        customers b,
                        countries c
                  WHERE a.cust_id = b.CUST_ID
                    AND b.country_id = c.COUNTRY_ID
                    AND c.country_name = 'Italy'     
                  GROUP BY SUBSTR(a.sales_month, 1, 4), a.employee_id) k
  GROUP BY years
  ORDER BY years;

-- 3. 1과 2의 결과를 조인해서 최대 매출을 일으킨 사원을 추출
SELECT emp.years, 
       emp.employee_id,
       emp.amount_sold
  FROM ( SELECT SUBSTR(a.sales_month, 1, 4) as years,
                a.employee_id, 
                SUM(a.amount_sold) AS amount_sold
           FROM sales a,
                customers b,
                countries c
          WHERE a.cust_id = b.CUST_ID
            AND b.country_id = c.COUNTRY_ID
            AND c.country_name = 'Italy'     
          GROUP BY SUBSTR(a.sales_month, 1, 4), a.employee_id   
        ) emp,
       ( SELECT  years, 
                 MAX(amount_sold) AS max_sold
          FROM ( SELECT SUBSTR(a.sales_month, 1, 4) as years,
                        a.employee_id, 
                        SUM(a.amount_sold) AS amount_sold
                   FROM sales a,
                        customers b,
                        countries c
                  WHERE a.cust_id = b.CUST_ID
                    AND b.country_id = c.COUNTRY_ID
                    AND c.country_name = 'Italy'     
                  GROUP BY SUBSTR(a.sales_month, 1, 4), a.employee_id    
               )
          GROUP BY years
       ) sale
  WHERE emp.years = sale.years
    AND emp.amount_sold = sale.max_sold 
  ORDER BY years;

-- 4. 3의 결과와 사원테이블을 조인해서 사원이름을 추출
SELECT emp.years, 
       emp.employee_id,
       emp2.emp_name,
       emp.amount_sold
  FROM ( SELECT SUBSTR(a.sales_month, 1, 4) as years,
                a.employee_id, 
                SUM(a.amount_sold) AS amount_sold
           FROM sales a,
                customers b,
                countries c
          WHERE a.cust_id = b.CUST_ID
            AND b.country_id = c.COUNTRY_ID
            AND c.country_name = 'Italy'     
          GROUP BY SUBSTR(a.sales_month, 1, 4), a.employee_id   
        ) emp,
       ( SELECT  years, 
                 MAX(amount_sold) AS max_sold
          FROM ( SELECT SUBSTR(a.sales_month, 1, 4) as years,
                        a.employee_id, 
                        SUM(a.amount_sold) AS amount_sold
                   FROM sales a,
                        customers b,
                        countries c
                  WHERE a.cust_id = b.CUST_ID
                    AND b.country_id = c.COUNTRY_ID
                    AND c.country_name = 'Italy'     
                  GROUP BY SUBSTR(a.sales_month, 1, 4), a.employee_id    
               )
          GROUP BY years
       ) sale,
       employees emp2
  WHERE emp.years = sale.years
    AND emp.amount_sold = sale.max_sold 
    AND emp.employee_id = emp2.employee_id
ORDER BY years;


--WITH절
--구문중복
--기간별, 지역별 잔액의 합계
SELECT period, region, sum(loan_jan_amt)jan_amt
FROM kor_loan_status
GROUP BY period, region;

--연도별로 최종월의 가장 큰 잔액
SELECT b.period, MAX(jan_amt)max_jan_amt
FROM (SELECT period, region, sum(loan_jan_amt)jan_amt --중복 구문
        FROM kor_loan_status
        GROUP BY period, region)b,
        (SELECT MAX(period) max_month
        FROM kor_loan_status
        GROUP BY SUBSTR(period,1,4))a
WHERE b.period = a.max_month        
GROUP BY b.period;

--최종쿼리
SELECT b2.*
FROM  (SELECT period, region, sum(loan_jan_amt)jan_amt --중복 구문
        FROM kor_loan_status
        GROUP BY period, region) b2,
        (SELECT b.period, MAX(jan_amt)max_jan_amt
        FROM (SELECT period, region, sum(loan_jan_amt)jan_amt --중복 구문
                FROM kor_loan_status
                GROUP BY period, region)b,
                (SELECT MAX(period) max_month
                FROM kor_loan_status
                GROUP BY SUBSTR(period,1,4))a
        WHERE b.period = a.max_month        
        GROUP BY b.period) c
WHERE b2.period = c.period
AND b2.jan_amt = c.max_jan_amt
ORDER BY 1;

--이걸 with절로 바꿔보자

--별첨지정
WITH b2 AS (SELECT period, region, sum(loan_jan_amt)jan_amt --중복 구문
        FROM kor_loan_status
        GROUP BY period, region),
    c AS  (SELECT b.period, MAX(jan_amt)max_jan_amt
        FROM (SELECT period, region, sum(loan_jan_amt)jan_amt --중복 구문
                FROM kor_loan_status
                GROUP BY period, region)b,
                (SELECT MAX(period) max_month
                FROM kor_loan_status
                GROUP BY SUBSTR(period,1,4))a
        WHERE b.period = a.max_month        
        GROUP BY b.period)
    --별첨 사용
SELECT b2.*
FROM b2,c
WHERE b2.period = c.period
AND b2.jan_amt = c.max_jan_amt
ORDER BY 1;

WITH b2 AS (SELECT period, region, sum(loan_jan_amt)jan_amt --중복 구문
        FROM kor_loan_status
        GROUP BY period, region),
    c AS  (SELECT b2.period, MAX(jan_amt)max_jan_amt
        FROM b2,
                (SELECT MAX(period) max_month
                FROM kor_loan_status
                GROUP BY SUBSTR(period,1,4))a
        WHERE b2.period = a.max_month        
        GROUP BY b2.period)
    --별첨 사용
SELECT b2.*
FROM b2,c
WHERE b2.period = c.period
AND b2.jan_amt = c.max_jan_amt
ORDER BY 1;

--익명블록

























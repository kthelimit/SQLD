--chap03_ex2_quiz1
--테이블의 구조만 복사하기
CREATE TABLE emp_insert AS
SELECT *
    FROM employee
WHERE 1=2; --참이 아닌 명제를 넣어서 데이터를 복사하지 않는 방법

--chap03_ex2_quiz2
INSERT INTO emp_insert(eno, ename,hiredate)
VALUES(1,'Java kim', SYSDATE);


--chap03_ex2_quiz3
INSERT INTO emp_insert(eno, ename,hiredate)
VALUES(2,'Side', SYSDATE);

--chap03_ex2_quiz4
CREATE TABLE emp_copy AS
SELECT *
    FROM employee;

--chap03_ex2_quiz5
UPDATE EMP_COPY
SET dno = 10
WHERE eno = 7788;

--chap03_ex2_quiz6
CREATE TABLE dept_copy AS
SELECT *
    FROM department;

--chap03_ex2_quiz7
DELETE FROM dept_copy
WHERE dname='RESEARCH';

--chap03_ex2_quiz8
DELETE FROM dept_copy
WHERE dno IN(10,30);

--chap03_ex3_quiz1
--사원명, 급여, 300 인상된 급여(salary_plus) 출력하기
SELECT ename, salary, (salary+300) AS salary_plus
FROM employee;

--chap03_ex3_quiz2
SELECT ename, salary, (salary*12+100) AS total_salary
FROM employee
ORDER BY salary DESC;

--chap03_ex3_quiz3
SELECT ename, salary
FROM employee
WHERE salary>2000
ORDER BY salary DESC;

--chap03_ex3_quiz4
SELECT ename, dno
FROM employee
WHERE eno=7788;

--chap03_ex3_quiz5
SELECT ename, salary
FROM employee
WHERE salary <2000 OR salary>3000;

SELECT ename, salary
FROM employee
WHERE salary NOT BETWEEN 2000 AND 3000;

--chap03_ex3_quiz6
SELECT ename, job, hiredate
FROM employee
WHERE hiredate BETWEEN '81/02/20' AND '81/05/01';

--chap03_ex3_quiz7
SELECT ename, dno
FROM employee
WHERE dno IN (20,30)
ORDER BY ename DESC;


--chap03_ex3_quiz8
SELECT ename, salary, dno
FROM employee
WHERE salary BETWEEN 2000 AND 3000
AND dno = ANY(20,30)
ORDER BY ename;

--chap03_ex3_quiz9
SELECT ename, hiredate
FROM employee
WHERE hiredate LIKE '81%';

--chap03_ex3_quiz10
SELECT ename, job
FROM employee
WHERE manager IS NULL;

--chap03_ex3_quiz11
--자격적으로는 받을 수 있는데 아직 성과가 없어서 0인가봄...
SELECT ename, salary, commission
FROM employee
WHERE commission IS NOT NULL
ORDER BY salary DESC, commission DESC;

--chap03_ex3_quiz12
SELECT *
FROM employee
WHERE ename LIKE '__R%'; 

--chap03_ex3_quiz13
SELECT ename
FROM employee
WHERE ename LIKE '%A%'
AND ename LIKE '%E%';

--chap03_ex3_quiz14
SELECT ename, job, salary
FROM employee
WHERE job = ANY ('CLERK', 'SALESMAN')
AND salary != ALL(1600,950,1300);

SELECT ename, job, salary
FROM employee
WHERE job IN ('CLERK', 'SALESMAN')
AND salary NOT IN(1600,950,1300);

--chap03_ex3_quiz15
SELECT ename, salary, commission
FROM employee
WHERE commission>=500;




--chap03_ex4_quiz1
CREATE VIEW v_em_dno AS
SELECT eno, ename, dno
FROM employee
WHERE dno = 20;

--chap03_ex4_quiz2
CREATE OR REPLACE VIEW v_em_dno AS
SELECT eno, ename, dno, salary, job
FROM employee
WHERE dno = 20;

--chap03_ex4_quiz4
CREATE OR REPLACE VIEW v_em_dno AS
SELECT eno, ename, dno, salary, job
FROM employee
WHERE dno = 20 WITH CHECK OPTION;

--chap03_ex4_quiz5
--2번 문제의 뷰로 갱신하고 넣는다.
DELETE FROM employee
WHERE ename IN('BELITA','ERICA','KALI','MIA','ZINNA');
INSERT INTO v_em_dno VALUES(5100, 'BELITA',10, 1500, 'CLERK'); --실패
INSERT INTO v_em_dno VALUES(5200, 'ERICA',20, 2300, 'ANALYST');
INSERT INTO v_em_dno VALUES(5300, 'KALI',30, 1750, 'SALESMAN'); --실패
INSERT INTO v_em_dno VALUES(5400, 'MIA',20, 950, 'ANALYST');
INSERT INTO v_em_dno VALUES(5500, 'ZINNA',10, 1050, 'CLERK'); --실패

SELECT *
FROM v_em_dno;

--chap03_ex4_quiz6
CREATE OR REPLACE VIEW v_em_dno AS
SELECT eno, ename, dno, salary, job
FROM employee
WHERE dno = 20 WITH READ ONLY;

--chap03_ex4_quiz7
--부서명이 employee에 없어서(department에 있음) 복합뷰로 구성해야한다.
CREATE OR REPLACE VIEW emp_dept AS
SELECT a.eno, a.ename, a.dno, b.dname
FROM employee a, department b
WHERE a.dno = b.dno;

--chap03_ex4_quiz8
SELECT *
FROM v_em_dno;

SELECT *
FROM emp_dept;

--text-> 뷰를 생성하는 스크립트
SELECT view_name, text
FROM user_views;

SELECT *
FROM user_views;

--chap03_ex4_quiz9
DROP VIEW v_em_dno;
DROP VIEW emp_dept;


--SELECT TO_CHAR(TO_DATE('2023.01.10 10', 'YYYY.MM.DD HH24')+1/24/(60/10), 'YYYY.MM.DD HH24:MI:SS') FROM DUAL;
